package org.euler.problems;

import java.util.Set;
import java.util.TreeSet;

/**
 * 
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 * @author User
 *
 */
public class Problem1Main {

	public static void main(String[] args) {
		Set<Integer> setOfNumbers = new TreeSet<Integer>();

		for (int i = 3; i < 1000; i += 3) {
			setOfNumbers.add(i);
		}

		for (int i = 5; i < 1000; i += 5) {
			setOfNumbers.add(i);
		}

		int result = setOfNumbers.stream().mapToInt(Integer::intValue).sum();

		System.out.println(result);
	}

}
